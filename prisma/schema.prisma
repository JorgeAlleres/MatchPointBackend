// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id                  Int       @id   @default(autoincrement())
  userName            String
  email               String    @unique
  password            String
  avatar              String
  role                String?   //Admin  Vip   null
  active              Boolean   @default(true)
  acceptNotifications Boolean   @default(true)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  Room Room[]

  User_Room User_Room[]
}

model Room {
  id                  Int       @id   @default(autoincrement())
  roomName            String
  description         String?
  capacity            Int
  code                String
  private             Boolean   @default(false)
  published           DateTime  @default(now())  // iso8601
  expired             DateTime?                  // iso8601
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt 

  //FK
  idRoomGame          Int?
  game                Game?     @relation(fields: [idRoomGame], references: [id])

  idUserCreator       Int
  userCreator         User      @relation(fields: [idUserCreator], references: [id])

  User_Room User_Room[]
}

model Game {
  id                  Int       @id   @default(autoincrement())
  gameName            String    @unique
  genre               String
  platform            String
  maxCapacity         Int
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  Room Room[]
}

model User_Room {
  idUser              Int
  idRoom              Int
  roleInRoom          String
  dateUnion           DateTime

  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  //FK
  user                User @relation(fields: [idUser], references: [id])
  room                Room @relation(fields: [idRoom], references: [id])

  @@id([idUser, idRoom])
}